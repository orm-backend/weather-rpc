<?php
namespace App\Repositories;

use App\Entities\History;
use Carbon\Carbon;
use Doctrine\DBAL\Types\Types;
use Doctrine\ORM\EntityManagerInterface;

/**
 * HistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HistoryRepository
{

    /**
     *
     * @var \Doctrine\ORM\EntityManagerInterface
     */
    private $em;

    /**
     *
     * @param EntityManagerInterface $em
     */
    public function __construct(EntityManagerInterface $em)
    {
        $this->em = $em;
    }

    /**
     *
     * @param Carbon $date
     * @return \App\Entities\History|null
     * @throws \Doctrine\ORM\NonUniqueResultException - If the query result is not unique.
     * @throws \Doctrine\ORM\NoResultException - If the query returned no result.
     */
    public function getByDate(Carbon $date)
    {
        return $this->em->createQueryBuilder()
            ->from(History::class, 'h')
            ->select('h')
            ->where('h.dateAt = :date')
            ->setParameter('date', $date, Types::DATE_MUTABLE)
            ->getQuery()
            ->getSingleResult();
    }

    /**
     *
     * @param int $lastDays
     * @return array
     */
    public function getHistory(int $lastDays): array
    {
        $date = Carbon::today()->addDays(- $lastDays);
        
        return $this->em->createQueryBuilder()
            ->from(History::class, 'h')
            ->select('h')
            ->where('h.dateAt >= :date')
            ->setParameter('date', $date, Types::DATE_MUTABLE)
            ->orderBy('h.dateAt', 'desc')
            //->setMaxResults($lastDays)
            ->getQuery()
            ->getResult();
    }

}
